<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dtXlyPdtStock">
      <PropertyDef name="WAREHOUSE">
        <Property name="label">WAREHOUSE</Property>
      </PropertyDef>
      <PropertyDef name="STOCK">
        <Property name="label">STOCK</Property>
      </PropertyDef>
      <PropertyDef name="CATEGORT">
        <Property name="label">CATEGORT</Property>
      </PropertyDef>
      <PropertyDef name="COLOR">
        <Property name="label">COLOR</Property>
      </PropertyDef>
      <PropertyDef name="PATTERN_NO">
        <Property name="label">PATTERN_NO</Property>
      </PropertyDef>
      <PropertyDef name="BRAND_NAME">
        <Property name="label">BRAND_NAME</Property>
      </PropertyDef>
      <PropertyDef name="GRADES_NAME">
        <Property name="label">GRADES_NAME</Property>
      </PropertyDef>
      <PropertyDef name="SPEC_NAME">
        <Property name="label">SPEC_NAME</Property>
      </PropertyDef>
      <PropertyDef name="TYPE_NAME">
        <Property name="label">TYPE_NAME</Property>
      </PropertyDef>
      <PropertyDef name="QTY">
        <Property name="label">QTY</Property>
      </PropertyDef>
      <PropertyDef name="TYPE_ID">
        <Property name="label">TYPE_ID</Property>
      </PropertyDef>
      <PropertyDef name="BRAND_ID">
        <Property name="label">BRAND_ID</Property>
      </PropertyDef>
      <PropertyDef name="GRADES_ID">
        <Property name="label">GRADES_ID</Property>
      </PropertyDef>
      <PropertyDef name="freeze">
        <Property name="submittable">false</Property>
      </PropertyDef>
      <PropertyDef name="STOCK_ID">
        <Property name="label">STOCK_ID</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dtXlyWhFreeze" parent="dtWhFreeze">
      <PropertyDef name="ctmName">
        <Property name="required">true</Property>
      </PropertyDef>
      <PropertyDef name="address"/>
      <PropertyDef name="typeName"/>
      <PropertyDef name="brandName"/>
      <PropertyDef name="categort"/>
      <PropertyDef name="patternNo"/>
      <PropertyDef name="color"/>
      <PropertyDef name="gradesName"/>
      <PropertyDef name="specName"/>
      <PropertyDef name="endDate">
        <Property name="label">endDate</Property>
        <Property name="dataType">Date</Property>
        <Property name="required">true</Property>
      </PropertyDef>
      <PropertyDef name="count">
        <Validator name="validator1" type="range">
          <Property name="minValue">0</Property>
          <Property name="runAt">client</Property>
          <Property name="maxValue">100000000</Property>
          <Property name="resultMessage">不能为负数</Property>
          <Property name="minValueValidateMode">notAllowEquals</Property>
        </Validator>
      </PropertyDef>
      <PropertyDef name="unFreeze">
        <Property name="submittable">false</Property>
      </PropertyDef>
      <PropertyDef name="warehouse"/>
    </DataType>
    <DataType name="dtCtm" parent="dtCustomer">
      <PropertyDef name="ca"/>
    </DataType>
  </Model>
  <View>
    <DataSet id="dsXlyWhFreeze">
      <Property name="dataType">[dtXlyWhFreeze]</Property>
      <Property name="dataProvider">freezeService#getAllFreeze</Property>
      <Property name="pageSize">40</Property>
    </DataSet>
    <DataSet id="dsPdtStock">
      <Property name="dataType">[dtXlyPdtStock]</Property>
      <Property name="dataProvider">stockService#getAllStock</Property>
      <Property name="pageSize">40</Property>
      <Property name="readOnly">true</Property>
    </DataSet>
    <DataSet id="dsXlyPdtType">
      <Property name="dataType">[dtPdtType]</Property>
      <Property name="dataProvider">productService#getType</Property>
    </DataSet>
    <DataSet id="dsXlyPdtBra">
      <Property name="dataType">[dtPdtBra]</Property>
      <Property name="dataProvider">productService#getBrand</Property>
    </DataSet>
    <DataSet id="dsXlyPdtGd">
      <Property name="dataType">[dtPdtGd]</Property>
      <Property name="dataProvider">productService#getGrades</Property>
    </DataSet>
    <DataSet id="dsMgr">
      <Property name="dataType">[dtBdf2UserPosition]</Property>
      <Property name="dataProvider">customerService#getAllMgr</Property>
    </DataSet>
    <DataSet id="dsCustomer">
      <ClientEvent name="beforeLoadData" signature="self,arg,afBalRecord">var entity = afBalRecord.get(&quot;entity&quot;);&#xD;
var salesMgrId =entity.get(&quot;salesMgrId&quot;);&#xD;
&#xD;
// 将参数拼装成JSON形式&#xD;
      var parameter = { &#xD;
        salesMgrId: salesMgrId           &#xD;
      };&#xD;
      // 调用AjaxAction&#xD;
self.set(&quot;parameter&quot;, parameter)</ClientEvent>
      <Property name="dataType">[dtCtm]</Property>
      <Property name="dataProvider">customerService#getCtmByNameSimple</Property>
    </DataSet>
    <DataSetDropDown id="dsddCustomer">
      <Property name="dataSet">dsCustomer</Property>
      <Property name="displayProperty">ca</Property>
      <Property name="dynaFilter">false</Property>
      <Property name="property">ca</Property>
      <Property name="editable">false</Property>
      <Property name="autoOpen">true</Property>
      <Property name="assignmentMap">ctmId</Property>
      <Property name="filterOnTyping">false</Property>
      <Property name="reloadDataOnOpen">true</Property>
    </DataSetDropDown>
    <Container id="ctStock">
      <AutoForm id="afCondition">
        <Property name="createPrivateDataSet">true</Property>
        <Property name="cols">*,*,*,*</Property>
        <Property name="labelSeparator">：</Property>
        <Property name="labelAlign">center</Property>
        <Property name="labelSpacing">1</Property>
        <Property name="labelWidth">50</Property>
        <AutoFormElement>
          <Property name="name">TYPE_NAME</Property>
          <Property name="label">种类</Property>
          <Property name="trigger">dsddPdtTyp</Property>
          <Editor/>
        </AutoFormElement>
        <AutoFormElement>
          <Property name="name">BRAND_NAME</Property>
          <Property name="label">品牌</Property>
          <Property name="trigger">dsddPdtBra</Property>
          <Editor/>
        </AutoFormElement>
        <AutoFormElement>
          <Property name="name">GRADES_NAME</Property>
          <Property name="label">等级</Property>
          <Property name="trigger">dsddPdtGd</Property>
          <Editor/>
        </AutoFormElement>
        <AutoFormElement>
          <Property name="name">CATEGORT</Property>
          <Property name="label">类别</Property>
          <Editor/>
        </AutoFormElement>
        <AutoFormElement>
          <Property name="name">COLOR</Property>
          <Property name="label">色别</Property>
          <Editor/>
        </AutoFormElement>
        <AutoFormElement>
          <Property name="name">PATTERN_NO</Property>
          <Property name="label">编号</Property>
          <Editor/>
        </AutoFormElement>
        <AutoFormElement>
          <Property name="name">WAREHOUSE</Property>
          <Property name="label">库位</Property>
          <Editor/>
        </AutoFormElement>
      </AutoForm>
      <ToolBar>
        <DataPilot>
          <Property name="itemCodes">pages,pageSize</Property>
          <Property name="dataSet">dsPdtStock</Property>
        </DataPilot>
        <ToolBarButton id="btnQuery">
          <ClientEvent name="onClick" signature="self,arg,afCondition,dsPdtStock">//获取afCondition绑定的实体对象&#xD;
var entity = afCondition.get(&quot;entity&quot;);&#xD;
//将实体对象作为参数传入，并异步刷新&#xD;
dsPdtStock.set(&quot;parameter&quot;,entity).flushAsync();</ClientEvent>
          <Property name="caption">查询</Property>
          <Property name="icon"> url(>skin>common/icons.gif) -20px -40px</Property>
        </ToolBarButton>
      </ToolBar>
      <DataGrid id="dgPdtStock">
        <ClientEvent name="onCreate" signature="self,arg,dialogAdd,dsXlyWhFreeze,dsPdtStock">&#xD;
var OperationCellRenderer = $extend(dorado.widget.grid.SubControlCellRenderer,&#xD;
{&#xD;
    createSubControl : function(arg) {&#xD;
        //返回按钮对象并为按钮对象绑定onClick事件&#xD;
        return new dorado.widget.Button({&#xD;
            onClick: function(self){&#xD;
				var entity = dsPdtStock.get(&quot;data:#&quot;);&#xD;
				var stockId = view.get(&quot;#dsPdtStock.data:#.#STOCK_ID&quot;);&#xD;
				var warehouse = view.get(&quot;#dsPdtStock.data:#.#WAREHOUSE&quot;);&#xD;
				if (entity) {&#xD;
					dsXlyWhFreeze.insert({&#xD;
						$dataType: &quot;dsXlyWhFreeze&quot;,&#xD;
						stockId : stockId,&#xD;
						warehouse : warehouse&#xD;
					});&#xD;
					view.get(&quot;#dialogAdd&quot;).show();&#xD;
				}		&#xD;
			}&#xD;
        });&#xD;
    },&#xD;
    refreshSubControl : function(button, arg) {&#xD;
        //设置按钮的标题&#xD;
        button.set({&#xD;
            caption : &quot;冻结库存&quot;,&#xD;
            disabled : false,&#xD;
			width : 70,&#xD;
			style : {color:&quot;#ff6666&quot;,backgroundColor:&quot;#bebebe&quot;}&#xD;
        });&#xD;
    }&#xD;
});&#xD;
self.set(&quot;#freeze.renderer&quot;, new OperationCellRenderer());</ClientEvent>
        <Property name="dataSet">dsPdtStock</Property>
        <Property name="dynaRowHeight">false</Property>
        <DataColumn>
          <Property name="name">freeze</Property>
          <Property name="align">center</Property>
          <Property name="caption">冻结库存</Property>
          <Property name="width">70</Property>
          <Editor/>
        </DataColumn>
        <DataColumn name="TYPE_NAME">
          <Property name="property">TYPE_NAME</Property>
          <Property name="caption">种类</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="BRAND_NAME">
          <Property name="property">BRAND_NAME</Property>
          <Property name="caption">品牌</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="CATEGORT">
          <Property name="property">CATEGORT</Property>
          <Property name="caption">类别</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="PATTERN_NO">
          <Property name="property">PATTERN_NO</Property>
          <Property name="caption">编号</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="GRADES_NAME">
          <Property name="property">GRADES_NAME</Property>
          <Property name="caption">等级</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="COLOR">
          <Property name="property">COLOR</Property>
          <Property name="caption">色别</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="SPEC_NAME">
          <Property name="property">SPEC_NAME</Property>
          <Property name="caption">规格</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="WAREHOUSE">
          <Property name="property">WAREHOUSE</Property>
          <Property name="caption">库位</Property>
          <Property name="align">center</Property>
        </DataColumn>
        <DataColumn name="STOCK">
          <Property name="property">STOCK</Property>
          <Property name="caption">库存</Property>
          <Property name="align">center</Property>
          <Property name="dataType">int</Property>
          <Property name="displayFormat">#,###</Property>
        </DataColumn>
      </DataGrid>
      <DataSetDropDown id="dsddPdtTyp">
        <ClientEvent name="onReady">&#xD;
&#xD;
</ClientEvent>
        <ClientEvent name="onFilterItems">&#xD;
</ClientEvent>
        <Property name="dataSet">dsXlyPdtType</Property>
        <Property name="displayProperty">typeName</Property>
        <Property name="dynaFilter">false</Property>
        <Property name="property">typeName</Property>
        <Property name="editable">false</Property>
        <Property name="assignmentMap">TYPE_ID=typeId</Property>
        <Property name="autoOpen">true</Property>
        <Property name="useEmptyItem">true</Property>
      </DataSetDropDown>
      <DataSetDropDown id="dsddPdtGd">
        <ClientEvent name="beforeExecute">//var gradesId = view.get(&quot;#dsXlyProduct.data:#.#GRADES_ID&quot;)&#xD;
//弹出一个对话框  &#xD;
 //  alert(&quot;gradesId=&quot;+gradesId);  &#xD;
 //   var dsXlyProductSave = view.get(&quot;#dsXlyProductSave&quot;);&#xD;
 //   dsXlyProductSave.set(&quot;parameter&quot;,{&#xD;
 //       &quot;gradesId&quot;: gradesId&#xD;
  //  });&#xD;
  //  dsXlyProductSave.flushAsync();</ClientEvent>
        <Property name="dataSet">dsXlyPdtGd</Property>
        <Property name="displayProperty">gradesName</Property>
        <Property name="property">gradesName</Property>
        <Property name="assignmentMap">GRADES_ID=gradesId</Property>
        <Property name="autoOpen">true</Property>
        <Property name="editable">false</Property>
        <Property name="useEmptyItem">true</Property>
      </DataSetDropDown>
      <DataSetDropDown id="dsddPdtBra">
        <ClientEvent name="beforeExecute">//var specId = view.get(&quot;#dsXlyProduct.data:#.#SPEC_ID&quot;)&#xD;
//    var dsXlyProductSave = view.get(&quot;#dsXlyProductSave&quot;);&#xD;
//    dsXlyProductSave.set(&quot;parameter&quot;,{&#xD;
//        &quot;specId&quot;: specId&#xD;
 //   });&#xD;
 //   dsXlyProductSave.flushAsync();</ClientEvent>
        <ClientEvent name="onReady">&#xD;
</ClientEvent>
        <Property name="dataSet">dsXlyPdtBra</Property>
        <Property name="displayProperty">brandName</Property>
        <Property name="property">brandName</Property>
        <Property name="assignmentMap">BRAND_ID=brandId</Property>
        <Property name="autoOpen">true</Property>
        <Property name="editable">false</Property>
        <Property name="useEmptyItem">true</Property>
      </DataSetDropDown>
      <Dialog id="dialogAdd">
        <ClientEvent name="onHide" signature="self,arg,dsXlyWhFreeze">dsXlyWhFreeze.get(&quot;data:#&quot;).cancel();</ClientEvent>
        <Property name="caption">填写冻结信息</Property>
        <Property name="width">650</Property>
        <Property name="height">300</Property>
        <Property name="closeAction">hide</Property>
        <Buttons>
          <Button id="dBtnSave">
            <ClientEvent name="onClick" signature="self,arg,dialogAdd,updateactionSave">var stock = view.get(&quot;#dsPdtStock.data:#.#STOCK&quot;);&#xD;
var count = view.get(&quot;#dsXlyWhFreeze.data:#.#count&quot;);&#xD;
&#xD;
var afBalRecord = view.get(&quot;#afBalRecord.entity&quot;);&#xD;
var ctmId   = afBalRecord.get(&quot;ctmId&quot;);&#xD;
&#xD;
var a=1;&#xD;
if(ctmId==null || ctmId&lt;=0 ){&#xD;
	dorado.MessageBox.alert(&quot;请选择客户！&quot;);&#xD;
	a=0;&#xD;
}&#xD;
&#xD;
&#xD;
if(stock>=count){&#xD;
	if(a==1){&#xD;
	//在保存操作完成后的回调函数中将编辑弹出框隐藏&#xD;
    updateactionSave.execute(function(){&#xD;
    dialogAdd.hide();&#xD;
	})&#xD;
    }&#xD;
&#xD;
}else{&#xD;
	dorado.MessageBox.alert(&quot;库存量不足！&quot;);&#xD;
}&#xD;
&#xD;
&#xD;
</ClientEvent>
            <Property name="caption">保存</Property>
            <Property name="icon">url(>skin>common/icons.gif) -140px -20px</Property>
          </Button>
          <Button id="dBtnCancel">
            <ClientEvent name="onClick" signature="self,arg,dialogAdd,dsXlyWhFreeze">dsXlyWhFreeze.get(&quot;data:#&quot;).cancel();&#xD;
dialogAdd.hide();</ClientEvent>
            <Property name="caption">取消</Property>
            <Property name="icon">url(>skin>common/icons.gif) -280px -220px</Property>
          </Button>
        </Buttons>
        <Children>
          <AutoForm id="afBalRecord">
            <Property name="cols">*,*</Property>
            <Property name="readOnly">false</Property>
            <Property name="createPrivateDataSet">false</Property>
            <Property name="dataSet">dsXlyWhFreeze</Property>
            <Property name="labelWidth">70</Property>
            <Property name="labelSeparator">:</Property>
            <AutoFormElement>
              <Property name="name">salesMgrName</Property>
              <Property name="label">销售经理</Property>
              <Property name="trigger">dsddMgr</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">ctmName</Property>
              <Property name="property">ctmName</Property>
              <Property name="trigger">dsddCustomer</Property>
              <Property name="label">客户姓名</Property>
              <Property name="editable">true</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">count</Property>
              <Property name="property">count</Property>
              <Property name="label">冻结数量</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">endDate</Property>
              <Property name="property">endDate</Property>
              <Property name="label">结束时间</Property>
              <Property name="editable">true</Property>
              <Property name="trigger">defaultDateTimeDropDown</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">remark</Property>
              <Property name="property">remark</Property>
              <Property name="label">备注</Property>
              <Editor/>
            </AutoFormElement>
          </AutoForm>
        </Children>
        <Tools/>
      </Dialog>
      <UpdateAction id="updateactionSave">
        <ClientEvent name="onFailure"> </ClientEvent>
        <ClientEvent name="onSuccess" signature="self,arg,dsXlyWhFreeze,dsPdtStock">&#xD;
var info = self.get(&quot;returnValue&quot;);&#xD;
&#xD;
if(info.result){&#xD;
	//刷新数据&#xD;
	dsXlyWhFreeze.flush();&#xD;
	dsPdtStock.flush();&#xD;
	dorado.MessageBox.alert(info.msg);&#xD;
}else{&#xD;
	dorado.MessageBox.alert(info.msg, {&#xD;
    icon: &quot;WARNING&quot;&#xD;
    });&#xD;
}&#xD;
</ClientEvent>
        <Property name="dataResolver">freezeService#addFreeze</Property>
        <Property name="executingMessage">正在保存。。。</Property>
        <Property name="hotkey">ctrl+s</Property>
        <UpdateItem>
          <Property name="dataSet">dsXlyWhFreeze</Property>
        </UpdateItem>
      </UpdateAction>
      <DataSetDropDown id="dsddMgr">
        <ClientEvent name="onValueSelect" signature="self,arg,afBalRecord">&#xD;
//清除&#xD;
	var entity = view.get(&quot;#afBalRecord.entity&quot;);&#xD;
    entity.set(&quot;ctmName&quot;,null);&#xD;
    entity.set(&quot;ctmId&quot;,null);&#xD;
	view.get(&quot;#afBalRecord&quot;).refresh();&#xD;
</ClientEvent>
        <Property name="dataSet">dsMgr</Property>
        <Property name="displayProperty">salesMgrName</Property>
        <Property name="dynaFilter">false</Property>
        <Property name="property">salesMgrName</Property>
        <Property name="editable">false</Property>
        <Property name="autoOpen">true</Property>
        <Property name="assignmentMap">salesMgrId</Property>
        <Property name="useEmptyItem">false</Property>
      </DataSetDropDown>
    </Container>
  </View>
</ViewConfig>
