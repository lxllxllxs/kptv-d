DELIMITER $$

USE `xly`$$

DROP PROCEDURE IF EXISTS `sortSaleByType`$$

CREATE DEFINER=`root`@`%` PROCEDURE `sortSaleByType`(
IN V_MONTH VARCHAR(7)
)
BEGIN
    DECLARE V_GRADES_A INT DEFAULT 0;
    DECLARE V_GRADES_B INT DEFAULT 0;
    DECLARE V_GRADES_C INT DEFAULT 0; 
    DECLARE V_GRADES_D INT DEFAULT 0;
    -- 次品 打包和未打包的 5 6
    DECLARE V_GRADES_E INT DEFAULT 0;    
    
    
     DECLARE V_MONTH_S DOUBLE DEFAULT 0;
      DECLARE V_MONTH_P DOUBLE DEFAULT 0;
     DECLARE V_QTY INT DEFAULT 0;   
    DECLARE V_TOTAL_AREA DOUBLE DEFAULT 0;  
    DECLARE V_TOTAL_PACK INT DEFAULT 0;     
    DECLARE V_OPT_ID INT;
    DECLARE V_COUNT INT DEFAULT 0;
    DECLARE V_GRADES_ID INT;
    DECLARE done BOOLEAN DEFAULT FALSE;
    -- v_billrecord_sp 已经筛选有效数据
    DECLARE cur CURSOR FOR 
    SELECT bsp.gradesId,bsp.count,bsp.qty FROM v_billrecord_sp bsp WHERE LEFT(bsp.billTime,7)=V_MONTH AND bsp.typeId=1;  
     
   DECLARE cur2 CURSOR FOR 
   SELECT bsp.gradesId,bsp.count,bsp.qty FROM v_billrecord_sp bsp WHERE LEFT(bsp.billTime,7)=V_MONTH AND bsp.typeId=2;  
     
    DECLARE cur3 CURSOR FOR 
   SELECT bsp.gradesId,bsp.count,bsp.qty FROM v_billrecord_sp bsp WHERE LEFT(bsp.billTime,7)=V_MONTH AND bsp.typeId=3;  
     
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
  OPEN cur;
    SET @a=0;
  -- 开始循环
  read_loop: LOOP
    -- 提取游标里的数据，这里只有一个，多个的话也一样；
    FETCH cur INTO V_GRADES_ID,V_COUNT,V_QTY;
    -- 声明结束的时候
    IF done THEN
      LEAVE read_loop;
    END IF;
	
    SET @a=@a+1;
	CASE V_GRADES_ID
	WHEN 1 THEN   SET V_GRADES_A=V_GRADES_A+V_COUNT;
	WHEN 2 THEN   SET V_GRADES_B=V_GRADES_B+V_COUNT;
	WHEN 3 THEN   SET V_GRADES_C=V_GRADES_C+V_COUNT;
	WHEN 4 THEN   SET V_GRADES_D=V_GRADES_D+V_COUNT;
	WHEN 5 THEN   SET V_GRADES_E=V_GRADES_E+V_COUNT;
	WHEN 6 THEN   SET V_GRADES_E=V_GRADES_E+V_COUNT;
	END CASE;
  END LOOP;
  -- 总面积 单位平方米 砖统一是800mm*800mm 即0.64m2 另外入库是按箱 需要换成片计算总面积 除了全抛釉3片 其余2片
	SET V_TOTAL_PACK=V_GRADES_A+V_GRADES_B+V_GRADES_C+V_GRADES_D+V_GRADES_E;
	SET V_TOTAL_AREA=V_TOTAL_PACK*V_QTY*0.64;
	INSERT INTO xly_sp_pdt_type 
	(PRODUCT_TYPE,END_MONTH,GRADES_A,GRADES_B,GRADES_C,GRADES_D,GRADES_E,TOTAL_AREA,TOTAL_PACK,SP_TYPE,CREATE_DATE,QTY)
	VALUES(1,V_MONTH,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_AREA,V_TOTAL_PACK,'销售',NOW(),V_QTY);-- 这里全是销售
	SELECT @a,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_PACK,V_TOTAL_AREA;
  CLOSE cur;
    -- 结束种类1
    
    SET done=FALSE,V_GRADES_A=0,V_GRADES_B=0,V_GRADES_C=0,V_GRADES_D=0,V_GRADES_E=0,V_TOTAL_PACK=0,V_TOTAL_AREA=0;
  OPEN cur2;
    SET @a=0;
  -- 开始循环
  read_loop: LOOP
    -- 提取游标里的数据，这里只有一个，多个的话也一样；
    FETCH cur2 INTO V_GRADES_ID,V_COUNT,V_QTY;
    -- 声明结束的时候
    IF done THEN
      LEAVE read_loop;
    END IF;
	
    SET @a=@a+1;
	CASE V_GRADES_ID
	WHEN 1 THEN   SET V_GRADES_A=V_GRADES_A+V_COUNT;
	WHEN 2 THEN   SET V_GRADES_B=V_GRADES_B+V_COUNT;
	WHEN 3 THEN   SET V_GRADES_C=V_GRADES_C+V_COUNT;
	WHEN 4 THEN   SET V_GRADES_D=V_GRADES_D+V_COUNT;
	WHEN 5 THEN   SET V_GRADES_E=V_GRADES_E+V_COUNT;
	WHEN 6 THEN   SET V_GRADES_E=V_GRADES_E+V_COUNT;
	END CASE;
  END LOOP;
  -- 总面积 单位平方米 砖统一是800mm*800mm 即0.64m2 另外入库是按箱 需要换成片计算总面积 除了全抛釉3片 其余2片
	SET V_TOTAL_PACK=V_GRADES_A+V_GRADES_B+V_GRADES_C+V_GRADES_D+V_GRADES_E;
	SET V_TOTAL_AREA=V_TOTAL_PACK*V_QTY*0.64;
	INSERT INTO xly_sp_pdt_type 
	(PRODUCT_TYPE,END_MONTH,GRADES_A,GRADES_B,GRADES_C,GRADES_D,GRADES_E,TOTAL_AREA,TOTAL_PACK,SP_TYPE,CREATE_DATE,QTY)
	VALUES(2,V_MONTH,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_AREA,V_TOTAL_PACK,'销售',NOW(),V_QTY);-- 这里全是销售
	SELECT @a,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_PACK,V_TOTAL_AREA;
  CLOSE cur2;
    -- 结束种类2    
  
    -- 这里忘记清除 导致数据不正常
  SET done=FALSE,V_GRADES_A=0,V_GRADES_B=0,V_GRADES_C=0,V_GRADES_D=0,V_GRADES_E=0,V_TOTAL_PACK=0,V_TOTAL_AREA=0;
  OPEN cur3;
    SET @a=0;
  -- 开始循环
  read_loop: LOOP
    -- 提取游标里的数据，这里只有一个，多个的话也一样；
    FETCH cur3 INTO V_GRADES_ID,V_COUNT,V_QTY;
    -- 声明结束的时候
    IF done THEN
      LEAVE read_loop;
    END IF;
	
    SET @a=@a+1;
	CASE V_GRADES_ID
	WHEN 1 THEN   SET V_GRADES_A=V_GRADES_A+V_COUNT;
	WHEN 2 THEN   SET V_GRADES_B=V_GRADES_B+V_COUNT;
	WHEN 3 THEN   SET V_GRADES_C=V_GRADES_C+V_COUNT;
	WHEN 4 THEN   SET V_GRADES_D=V_GRADES_D+V_COUNT;
	WHEN 5 THEN   SET V_GRADES_E=V_GRADES_E+V_COUNT;
	WHEN 6 THEN   SET V_GRADES_E=V_GRADES_E+V_COUNT;
	END CASE;
  END LOOP;
  -- 总面积 单位平方米 砖统一是800mm*800mm 即0.64m2 另外入库是按箱 需要换成片计算总面积 除了全抛釉3片 其余2片
	SET V_TOTAL_PACK=V_GRADES_A+V_GRADES_B+V_GRADES_C+V_GRADES_D+V_GRADES_E;
	SET V_TOTAL_AREA=V_TOTAL_PACK*V_QTY*0.64;
	INSERT INTO xly_sp_pdt_type 
	(PRODUCT_TYPE,END_MONTH,GRADES_A,GRADES_B,GRADES_C,GRADES_D,GRADES_E,TOTAL_AREA,TOTAL_PACK,SP_TYPE,CREATE_DATE,QTY)
	VALUES(3,V_MONTH,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_AREA,V_TOTAL_PACK,'销售',NOW(),V_QTY);-- 这里全是销售
	SELECT @a,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_PACK,V_TOTAL_AREA;
  CLOSE cur3;
    -- 结束种类3    
        -- 统计3个种类的本月所有销量
	SELECT SUM(spt.TOTAL_AREA) INTO  V_MONTH_S FROM xly_sp_pdt_type spt WHERE END_MONTH=V_MONTH AND SP_TYPE='销售' ;
	UPDATE xly_sp_pdt_type SET MONTH_TOTAL_S=V_MONTH_S WHERE END_MONTH=V_MONTH;
	 -- 统计3个种类的本月所有产量
	SELECT SUM(spt.TOTAL_AREA) INTO  V_MONTH_P FROM xly_sp_pdt_type spt WHERE END_MONTH=V_MONTH AND SP_TYPE='生产';
	UPDATE xly_sp_pdt_type SET MONTH_TOTAL_P=V_MONTH_P WHERE END_MONTH=V_MONTH ;
    
	
	
    END$$

DELIMITER ;