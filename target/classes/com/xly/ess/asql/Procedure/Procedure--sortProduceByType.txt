DELIMITER $$

USE `xly`$$

DROP PROCEDURE IF EXISTS `sortProduceByType`$$

CREATE DEFINER=`root`@`%` PROCEDURE `sortProduceByType`(
IN V_MONTH VARCHAR(7)
)
BEGIN
    DECLARE V_GRADES_A INT DEFAULT 0;
    DECLARE V_GRADES_B INT DEFAULT 0;
    DECLARE V_GRADES_C INT DEFAULT 0; 
    DECLARE V_GRADES_D INT DEFAULT 0;
    DECLARE V_GRADES_E INT DEFAULT 0;    
    
     DECLARE V_QTY INT DEFAULT 0;   
     
    DECLARE V_MONTH_P DOUBLE DEFAULT 0;  
    DECLARE V_TOTAL_AREA DOUBLE DEFAULT 0;  
    DECLARE V_TOTAL_PACK INT DEFAULT 0;     
    DECLARE V_OPT_ID INT;
    DECLARE V_STOCK INT DEFAULT 0;
    DECLARE V_GRADES_ID INT;
     DECLARE done BOOLEAN DEFAULT FALSE;
     DECLARE cur CURSOR FOR 
     SELECT vw.GRADES_ID,vw.OPT_ID,vw.STOCK,vw.QTY FROM v_warerecord vw WHERE LEFT(vw.PRODUCED_DATE,7)=V_MONTH 
     AND vw.TYPE_ID=1;
     
  DECLARE cur2 CURSOR FOR 
     SELECT vw.GRADES_ID,vw.OPT_ID,vw.STOCK,vw.QTY FROM v_warerecord vw WHERE LEFT(vw.PRODUCED_DATE,7)=V_MONTH 
     AND vw.TYPE_ID=2;   
     
       DECLARE cur3 CURSOR FOR 
     SELECT vw.GRADES_ID,vw.OPT_ID,vw.STOCK,vw.QTY FROM v_warerecord vw WHERE LEFT(vw.PRODUCED_DATE,7)=V_MONTH 
     AND vw.TYPE_ID=3;    
     
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET done = TRUE;
  OPEN cur;
    SET @a=0;
  -- 开始循环
  read_loop: LOOP
    -- 提取游标里的数据，这里只有一个，多个的话也一样；
    FETCH cur INTO V_GRADES_ID,V_OPT_ID,V_STOCK,V_QTY;
    -- 声明结束的时候
    IF done THEN
      LEAVE read_loop;
    END IF;
	
    -- 这里做你想做的循环的事件
	IF V_OPT_ID=3 OR V_OPT_ID=4 THEN
	SET V_STOCK=-V_STOCK;
    END IF;
    SET @a=@a+1;
	CASE V_GRADES_ID
	WHEN 1 THEN   SET V_GRADES_A=V_GRADES_A+V_STOCK;
	WHEN 2 THEN   SET V_GRADES_B=V_GRADES_B+V_STOCK;
	WHEN 3 THEN   SET V_GRADES_C=V_GRADES_C+V_STOCK;
	WHEN 4 THEN   SET V_GRADES_D=V_GRADES_D+V_STOCK;
	WHEN 5 THEN   SET V_GRADES_E=V_GRADES_E+V_STOCK;
	WHEN 6 THEN   SET V_GRADES_E=V_GRADES_E+V_STOCK;
	END CASE;
  END LOOP;
  -- 总面积 单位平方米 砖统一是800mm*800mm 即0.64m2 另外入库是按箱 需要换成片计算总面积 除了全抛釉3片 其余2片
	SET V_TOTAL_PACK=V_GRADES_A+V_GRADES_B+V_GRADES_C+V_GRADES_D+V_GRADES_E;
	SET V_TOTAL_AREA=V_TOTAL_PACK*V_QTY*0.64;
	INSERT INTO xly_sp_pdt_type 
	(PRODUCT_TYPE,END_MONTH,GRADES_A,GRADES_B,GRADES_C,GRADES_D,GRADES_E,TOTAL_AREA,TOTAL_PACK,SP_TYPE,CREATE_DATE,QTY)
	VALUES(1,V_MONTH,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_AREA,V_TOTAL_PACK,'生产',NOW(),V_QTY);-- 这里全是生产
	SELECT @a,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_PACK,V_TOTAL_AREA;
	
  CLOSE cur;
    -- 结束种类1
    
    SET done=FALSE,V_GRADES_A=0,V_GRADES_B=0,V_GRADES_C=0,V_GRADES_D=0,V_GRADES_E=0,V_TOTAL_PACK=0,V_TOTAL_AREA=0;
  OPEN cur2;
    SET @a=0;
  -- 开始循环
  read_loop: LOOP
    -- 提取游标里的数据，这里只有一个，多个的话也一样；
    FETCH cur2 INTO V_GRADES_ID,V_OPT_ID,V_STOCK,V_QTY;
    -- 声明结束的时候
    IF done THEN
      LEAVE read_loop;
    END IF;
	
    -- 这里做你想做的循环的事件
	IF V_OPT_ID=3 OR V_OPT_ID=4 THEN
	SET V_STOCK=-V_STOCK;
    END IF;
    SET @a=@a+1;
	CASE V_GRADES_ID
	WHEN 1 THEN   SET V_GRADES_A=V_GRADES_A+V_STOCK;
	WHEN 2 THEN   SET V_GRADES_B=V_GRADES_B+V_STOCK;
	WHEN 3 THEN   SET V_GRADES_C=V_GRADES_C+V_STOCK;
	WHEN 4 THEN   SET V_GRADES_D=V_GRADES_D+V_STOCK;
	WHEN 5 THEN   SET V_GRADES_E=V_GRADES_E+V_STOCK;
	WHEN 6 THEN   SET V_GRADES_E=V_GRADES_E+V_STOCK;
	END CASE;
  END LOOP;
  -- 总面积 单位平方米 砖统一是800mm*800mm 即0.64m2 另外入库是按箱 需要换成片计算总面积 除了全抛釉3片 其余2片
	SET V_TOTAL_PACK=V_GRADES_A+V_GRADES_B+V_GRADES_C+V_GRADES_D+V_GRADES_E;
	SET V_TOTAL_AREA=V_TOTAL_PACK*V_QTY*0.64;
	INSERT INTO xly_sp_pdt_type 
	(PRODUCT_TYPE,END_MONTH,GRADES_A,GRADES_B,GRADES_C,GRADES_D,GRADES_E,TOTAL_AREA,TOTAL_PACK,SP_TYPE,CREATE_DATE,QTY)
	VALUES(2,V_MONTH,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_AREA,V_TOTAL_PACK,'生产',NOW(),V_QTY);-- 这里全是生产
	SELECT @a,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_PACK,V_TOTAL_AREA;
  CLOSE cur2;
    -- 结束种类2    
  -- 这里忘记清除 导致数据不正常
  SET done=FALSE,V_GRADES_A=0,V_GRADES_B=0,V_GRADES_C=0,V_GRADES_D=0,V_GRADES_E=0,V_TOTAL_PACK=0,V_TOTAL_AREA=0;
  OPEN cur3;
    SET @a=0;
  -- 开始循环
  read_loop: LOOP
    -- 提取游标里的数据，这里只有一个，多个的话也一样；
    FETCH cur3 INTO V_GRADES_ID,V_OPT_ID,V_STOCK,V_QTY;
    -- 声明结束的时候
    IF done THEN
      LEAVE read_loop;
    END IF;
	
    -- 这里做你想做的循环的事件
	IF V_OPT_ID=3 OR V_OPT_ID=4 THEN
	SET V_STOCK=-V_STOCK;
    END IF;
    SET @a=@a+1;
	CASE V_GRADES_ID
	WHEN 1 THEN   SET V_GRADES_A=V_GRADES_A+V_STOCK;
	WHEN 2 THEN   SET V_GRADES_B=V_GRADES_B+V_STOCK;
	WHEN 3 THEN   SET V_GRADES_C=V_GRADES_C+V_STOCK;
	WHEN 4 THEN   SET V_GRADES_D=V_GRADES_D+V_STOCK;
	WHEN 5 THEN   SET V_GRADES_E=V_GRADES_E+V_STOCK;
	WHEN 6 THEN   SET V_GRADES_E=V_GRADES_E+V_STOCK;
	END CASE;
  END LOOP;
  -- 总面积 单位平方米 砖统一是800mm*800mm 即0.64m2 另外入库是按箱 需要换成片计算总面积 除了全抛釉3片 其余2片
	SET V_TOTAL_PACK=V_GRADES_A+V_GRADES_B+V_GRADES_C+V_GRADES_D+V_GRADES_E;
	SET V_TOTAL_AREA=V_TOTAL_PACK*V_QTY*0.64;
	INSERT INTO xly_sp_pdt_type 
	(PRODUCT_TYPE,END_MONTH,GRADES_A,GRADES_B,GRADES_C,GRADES_D,GRADES_E,TOTAL_AREA,TOTAL_PACK,SP_TYPE,CREATE_DATE,QTY)
	VALUES(3,V_MONTH,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_AREA,V_TOTAL_PACK,'生产',NOW(),V_QTY);-- 这里全是生产
	SELECT @a,V_GRADES_A,V_GRADES_B,V_GRADES_C,V_GRADES_D,V_GRADES_E,V_TOTAL_PACK,V_TOTAL_AREA;
  CLOSE cur3;
    -- 结束种类3   
   
    
     
    END$$

DELIMITER ;