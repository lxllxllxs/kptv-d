DELIMITER $$

USE `xly`$$

DROP VIEW IF EXISTS `v_billrecord_simple`$$

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `v_billrecord_simple` AS 
SELECT
  `b`.`BILL_NO`        AS `billNo`,
  `b`.`BILL_TIME`      AS `billTime`,
  `b`.`BILL_TYPE`      AS `billType`,
  `b`.`STATE`          AS `bState`,
  `br`.`COUNT`         AS `count`,
  `br`.`PRICE`         AS `price`,
  `br`.`BENCHMARK`     AS `benchmark`,
  `b`.`TOTAL_AMOUNT`   AS `totalAmount`,
  ((`br`.`COUNT` * `br`.`PRICE`) * `vs`.`QTY`) AS `subTotal`,
  `ctm`.`CTM_NAME`     AS `ctmName`,
  `ctm`.`CTM_ID`       AS `ctmId`,
  `ctm`.`SALES_MGR_ID` AS `salesMgrId`,
  `ctm`.`ADDRESS`      AS `address`,
  `vs`.`BRAND_NAME`    AS `brandName`,
  `vs`.`BRAND_ID`      AS `brandId`,
  `vs`.`GRADES_NAME`   AS `gradesName`,
  `vs`.`TYPE_NAME`     AS `typeName`,
  `vs`.`QTY`           AS `qty`,
  (`br`.`COUNT` * `vs`.`QTY`) AS `qtyCount`,
  `vs`.`GRADES_ID`     AS `gradesId`,
  `vs`.`TYPE_ID`       AS `typeId`,
  `mgr`.`salesMgrName` AS `mgrName`
FROM ((((`xly_bill` `b`
      JOIN `xly_bill_record` `br`)
     JOIN `xly_customer` `ctm`)
    JOIN `v_mgr` `mgr`)
   JOIN `v_stock` `vs`)
WHERE ((`b`.`BILL_NO` = `br`.`BILL_NO`)
       AND (`b`.`CTM_ID` = `ctm`.`CTM_ID`)
       AND (`mgr`.`salesMgrId` = `ctm`.`SALES_MGR_ID`)
       AND (`br`.`STOCK_ID` = `vs`.`STOCK_ID`))
ORDER BY `b`.`BILL_NO` DESC$$

DELIMITER ;