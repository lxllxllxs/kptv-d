<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dtStock" parent="dtMatStock">
      <PropertyDef name="matName">
        <Property name="required">true</Property>
        <Property name="submittable">true</Property>
      </PropertyDef>
      <PropertyDef name="mat2Name">
        <Property name="required">true</Property>
        <Property name="submittable">true</Property>
      </PropertyDef>
      <PropertyDef name="mat3Name"/>
      <PropertyDef name="unit"/>
      <PropertyDef name="matId"/>
      <PropertyDef name="mat2Id"/>
      <PropertyDef name="out">
        <Property name="submittable">false</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dataType1">
      <PropertyDef name="count">
        <Property name="required">true</Property>
        <Validator name="validator1" type="range">
          <Property name="minValue">0</Property>
          <Property name="runAt">client</Property>
          <Property name="maxValue">100000000</Property>
          <Property name="resultMessage">请输入正整数</Property>
          <Property name="minValueValidateMode">notAllowEquals</Property>
        </Validator>
      </PropertyDef>
    </DataType>
    <DataType name="dtStockOut" parent="dtMatStockOut">
      <PropertyDef name="sectionName">
        <Property name="required">true</Property>
      </PropertyDef>
      <PropertyDef name="typeName">
        <Property name="required">true</Property>
      </PropertyDef>
    </DataType>
    <DataType name="dtStockOutRecord" parent="dtMatStockOutRecord">
      <PropertyDef name="cancel">
        <Property name="submittable">false</Property>
      </PropertyDef>
      <PropertyDef name="matName">
        <Property name="required">true</Property>
        <Property name="submittable">true</Property>
      </PropertyDef>
      <PropertyDef name="mat2Name">
        <Property name="required">true</Property>
        <Property name="submittable">true</Property>
      </PropertyDef>
      <PropertyDef name="mat3Name"/>
      <PropertyDef name="unit"/>
      <PropertyDef name="subTotal"/>
    </DataType>
    <DataType name="dtSection" parent="dtMatSection">
      <PropertyDef name="sectionName"/>
    </DataType>
  </Model>
  <View>
    <DataSet id="dsStock">
      <Property name="dataType">[dtStock]</Property>
      <Property name="dataProvider">matStockService#getAllStock</Property>
      <Property name="pageSize">40</Property>
    </DataSet>
    <DataSet id="dsMat1">
      <Property name="dataType">[dtMat]</Property>
      <Property name="dataProvider">matService#getAllMat</Property>
    </DataSet>
    <DataSet id="dsMat1ToMat2">
      <ClientEvent name="beforeLoadData" signature="self,arg,dsMat1">&#xD;
var matId = view.get(&quot;#dsMat1.data:#.#matId&quot;);&#xD;
&#xD;
self.set(&quot;parameter&quot;,{&#xD;
	&quot;matId&quot;:matId&#xD;
});&#xD;
</ClientEvent>
      <Property name="dataType">[dtMat2]</Property>
      <Property name="dataProvider">matService#getMat1ToMat2</Property>
    </DataSet>
    <DataSet id="dsMat2">
      <Property name="dataType">[dtMat2]</Property>
      <Property name="dataProvider">matService#getAllMat2</Property>
    </DataSet>
    <DataSet id="dsStockOut">
      <ClientEvent name="onCreate">self.setData({&#xD;
	$dataType : &quot;dsStockOut&quot;,&#xD;
&#xD;
}&#xD;
);</ClientEvent>
      <Property name="dataType">dtStockOut</Property>
    </DataSet>
    <DataSet id="dsStockOutRecord">
      <Property name="dataType">[dtStockOutRecord]</Property>
    </DataSet>
    <DataSet id="dsXlyPdtType">
      <ClientEvent name="onLoadData">self.insert({&#xD;
	$dataType : &quot;dsXlyPdtType&quot;,&#xD;
	typeId : 5,&#xD;
	typeName : &quot;其他&quot;&#xD;
&#xD;
}&#xD;
);</ClientEvent>
      <Property name="dataType">[dtPdtType]</Property>
      <Property name="dataProvider">productService#getType</Property>
    </DataSet>
    <DataSet id="dsSection">
      <ClientEvent name="beforeLoadData" signature="self,arg,dsStockOut">&#xD;
var typeId = view.get(&quot;#dsStockOut.data:#.#typeId&quot;);&#xD;
if(typeId==0){&#xD;
	dorado.MessageBox.alert(&quot;请先选择生产种类&quot;);&#xD;
}else{&#xD;
	self.set(&quot;parameter&quot;,{&#xD;
	&quot;typeId&quot;:typeId&#xD;
        });&#xD;
}&#xD;
</ClientEvent>
      <Property name="dataType">[dtSection]</Property>
      <Property name="dataProvider">matStockOutService#getAllSection</Property>
    </DataSet>
    <DataSetDropDown id="dsddMat1">
      <Property name="dataSet">dsMat1</Property>
      <Property name="property">matName</Property>
      <Property name="displayProperty">matName</Property>
      <Property name="useEmptyItem">true</Property>
      <Property name="assignmentMap">matId</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
    </DataSetDropDown>
    <DataSetDropDown id="dsddMat2">
      <Property name="property">mat2Name</Property>
      <Property name="displayProperty">mat2Name</Property>
      <Property name="dataSet">dsMat1ToMat2</Property>
      <Property name="assignmentMap">mat2Id</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <Property name="useEmptyItem">true</Property>
      <Property name="reloadDataOnOpen">true</Property>
    </DataSetDropDown>
    <DataSetDropDown id="dsddPdtTyp">
      <ClientEvent name="onReady">&#xD;
&#xD;
</ClientEvent>
      <ClientEvent name="onFilterItems">&#xD;
</ClientEvent>
      <Property name="dataSet">dsXlyPdtType</Property>
      <Property name="displayProperty">typeName</Property>
      <Property name="dynaFilter">false</Property>
      <Property name="property">typeName</Property>
      <Property name="editable">false</Property>
      <Property name="assignmentMap">typeId=typeId,typeName=typeName</Property>
      <Property name="autoOpen">true</Property>
      <Property name="useEmptyItem">false</Property>
    </DataSetDropDown>
    <DataSetDropDown id="dsddSection">
      <Property name="dataSet">dsSection</Property>
      <Property name="property">sectionName</Property>
      <Property name="displayProperty">sectionName</Property>
      <Property name="useEmptyItem">false</Property>
      <Property name="assignmentMap">sectionId</Property>
      <Property name="autoOpen">true</Property>
      <Property name="editable">false</Property>
      <Property name="reloadDataOnOpen">true</Property>
    </DataSetDropDown>
    <Dialog id="dialogAdd">
      <Property name="caption">填写信息</Property>
      <Property name="width">300</Property>
      <Property name="height">200</Property>
      <Property name="closeAction">hide</Property>
      <Buttons>
        <Button id="dBtnSave">
          <ClientEvent name="onClick" signature="self,arg,dialogAdd,dsStockOutRecord,dsStock,afOutCount">var stock = view.get(&quot;#dsStock.data:#.#stock&quot;);&#xD;
afOutCount.validate();&#xD;
//获取afBillRecord绑定的实体对象&#xD;
var entity = view.get(&quot;#afOutCount.entity&quot;);&#xD;
var count = entity.get(&quot;count&quot;);&#xD;
&#xD;
if(stock>=count){&#xD;
	var entityStock = dsStock.get(&quot;data:#&quot;);&#xD;
	var stockId = view.get(&quot;#dsStock.data:#.#stockId&quot;);&#xD;
	var matName = view.get(&quot;#dsStock.data:#.#matName&quot;);&#xD;
	var mat2Name = view.get(&quot;#dsStock.data:#.#mat2Name&quot;);&#xD;
	var mat3Name = view.get(&quot;#dsStock.data:#.#mat3Name&quot;);&#xD;
	var unit = view.get(&quot;#dsStock.data:#.#unit&quot;);&#xD;
	var cost = view.get(&quot;#dsStock.data:#.#cost&quot;);&#xD;
	var price = view.get(&quot;#dsStock.data:#.#price&quot;);&#xD;
       &#xD;
	if (entityStock) {&#xD;
		var a=0;&#xD;
		var List =dsStockOutRecord.getData();&#xD;
        List.each(function(entity){&#xD;
             var stockId1 = entity.get(&quot;stockId&quot;);&#xD;
             if(stockId==stockId1){&#xD;
			 	a=1;&#xD;
			 }&#xD;
        });&#xD;
		if(a==0){&#xD;
			dsStockOutRecord.insert({&#xD;
			$dataType: &quot;dsStockOutRecord&quot;,&#xD;
			stockId : stockId,&#xD;
			matName : matName,&#xD;
			mat2Name : mat2Name,&#xD;
			mat3Name : mat3Name,&#xD;
			unit : unit,&#xD;
			count : count,&#xD;
			cost : cost,&#xD;
			price : price,&#xD;
			subTotal : count*cost&#xD;
		});&#xD;
		&#xD;
		&#xD;
		dialogAdd.hide();&#xD;
		&#xD;
		}else{&#xD;
			dorado.MessageBox.alert(&quot;亲，同一张出库单不能出现相同库存！&quot;);&#xD;
		}&#xD;
		&#xD;
		&#xD;
		&#xD;
	 }&#xD;
}else{&#xD;
	dorado.MessageBox.alert(&quot;库存量不足！&quot;);&#xD;
}&#xD;
&#xD;
&#xD;
</ClientEvent>
          <Property name="caption">确定</Property>
          <Property name="icon">url(>skin>common/icons.gif) -140px -20px</Property>
        </Button>
        <Button id="dBtnCancel">
          <ClientEvent name="onClick" signature="self,arg,dialogAdd">&#xD;
dialogAdd.hide();</ClientEvent>
          <Property name="caption">取消</Property>
          <Property name="icon">url(>skin>common/icons.gif) -280px -220px</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm id="afOutCount">
          <Property name="readOnly">false</Property>
          <Property name="createPrivateDataSet">true</Property>
          <Property name="labelWidth">70</Property>
          <Property name="labelSeparator">:</Property>
          <Property name="cols">*</Property>
          <Property name="dataType">dataType1</Property>
          <AutoFormElement>
            <Property name="name">count</Property>
            <Property name="label">数量</Property>
            <Editor/>
          </AutoFormElement>
        </AutoForm>
      </Children>
      <Tools/>
    </Dialog>
    <SplitPanel>
      <Property name="direction">bottom</Property>
      <Property name="position">380</Property>
      <MainControl>
        <Container layout="vbox">
          <AutoForm id="afRecord">
            <Property name="cols">*,*,*,*,*</Property>
            <Property name="labelSpacing">:</Property>
            <Property name="labelAlign">right</Property>
            <Property name="createPrivateDataSet">false</Property>
            <AutoFormElement>
              <Property name="name">matName</Property>
              <Property name="property">matName</Property>
              <Property name="label">组名</Property>
              <Property name="trigger">dsddMat1</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">mat2Name</Property>
              <Property name="property">mat2Name</Property>
              <Property name="label">类别</Property>
              <Property name="trigger">dsddMat2</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">mat3Name</Property>
              <Property name="property">mat3Name</Property>
              <Property name="label">品名</Property>
              <Editor/>
            </AutoFormElement>
          </AutoForm>
          <ToolBar>
            <DataPilot>
              <Property name="dataSet">dsStockRecord</Property>
              <Property name="itemCodes">pages,pageSize</Property>
            </DataPilot>
            <ToolBarButton id="btnQuery">
              <ClientEvent name="onClick" signature="self,arg,afRecord,dsStock">//获取afCondition绑定的实体对象&#xD;
var entity = afRecord.get(&quot;entity&quot;);&#xD;
//将实体对象作为参数传入，并异步刷新&#xD;
 dsStock.set(&quot;parameter&quot;,entity).flushAsync();&#xD;
</ClientEvent>
              <Property name="caption">查询</Property>
              <Property name="icon"> url(>skin>common/icons.gif) -20px -40px</Property>
            </ToolBarButton>
          </ToolBar>
          <DataGrid id="dgStock">
            <ClientEvent name="onCreate" signature="self,arg,dsStock">&#xD;
var OperationCellRenderer = $extend(dorado.widget.grid.SubControlCellRenderer,&#xD;
{&#xD;
    createSubControl : function(arg) {&#xD;
        //返回按钮对象并为按钮对象绑定onClick事件&#xD;
        return new dorado.widget.Button({&#xD;
            onClick: function(self){&#xD;
				var entity = dsStock.get(&quot;data:#&quot;);&#xD;
				if (entity) {&#xD;
					view.get(&quot;#dialogAdd&quot;).show();&#xD;
	                &#xD;
				}		&#xD;
			}&#xD;
        });&#xD;
    },&#xD;
    refreshSubControl : function(button, arg) {&#xD;
        //设置按钮的标题&#xD;
        button.set({&#xD;
            caption : &quot;出库&quot;,&#xD;
            disabled : false,&#xD;
			width : 70,&#xD;
			style : {color:&quot;#ffffff&quot;,backgroundColor:&quot;#E03131&quot;}&#xD;
        });&#xD;
    }&#xD;
});&#xD;
self.set(&quot;#out.renderer&quot;, new OperationCellRenderer());</ClientEvent>
            <Property name="dataSet">dsStock</Property>
            <Property name="readOnly">true</Property>
            <DataColumn>
              <Property name="name">out</Property>
              <Property name="align">center</Property>
              <Property name="caption">出库</Property>
              <Property name="width">70</Property>
              <Property name="property">out</Property>
              <Editor/>
            </DataColumn>
            <DataColumn name="matName">
              <Property name="property">matName</Property>
              <Property name="align">center</Property>
              <Property name="caption">组名</Property>
            </DataColumn>
            <DataColumn name="mat2Name">
              <Property name="property">mat2Name</Property>
              <Property name="align">center</Property>
              <Property name="caption">类别</Property>
            </DataColumn>
            <DataColumn name="mat3Name">
              <Property name="property">mat3Name</Property>
              <Property name="align">center</Property>
              <Property name="caption">品名</Property>
            </DataColumn>
            <DataColumn name="unit">
              <Property name="property">unit</Property>
              <Property name="align">center</Property>
              <Property name="caption">单位</Property>
            </DataColumn>
            <DataColumn name="stock">
              <Property name="property">stock</Property>
              <Property name="align">center</Property>
              <Property name="caption">库存量</Property>
            </DataColumn>
            <DataColumn name="price">
              <Property name="property">price</Property>
              <Property name="align">center</Property>
              <Property name="caption">单价</Property>
            </DataColumn>
            <DataColumn name="cost">
              <Property name="property">cost</Property>
              <Property name="align">center</Property>
              <Property name="caption">成本单价</Property>
            </DataColumn>
            <DataColumn name="modifyDate">
              <Property name="property">modifyDate</Property>
              <Property name="align">center</Property>
              <Property name="caption">修改时间</Property>
            </DataColumn>
          </DataGrid>
        </Container>
      </MainControl>
      <SideControl>
        <Container layout="vbox align:center">
          <AutoForm id="afOut">
            <Property name="readOnly">false</Property>
            <Property name="createPrivateDataSet">false</Property>
            <Property name="labelWidth">80</Property>
            <Property name="labelSeparator">:</Property>
            <Property name="cols">*,*,*,*</Property>
            <Property name="dataSet">dsStockOut</Property>
            <AutoFormElement>
              <Property name="name">typeName</Property>
              <Property name="property">typeName</Property>
              <Property name="label">生产种类</Property>
              <Property name="trigger">dsddPdtTyp</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">sectionName</Property>
              <Property name="property">sectionName</Property>
              <Property name="label">领用工段</Property>
              <Property name="trigger">dsddSection</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">useDate</Property>
              <Property name="property">useDate</Property>
              <Property name="label">领用日期</Property>
              <Editor/>
            </AutoFormElement>
            <AutoFormElement>
              <Property name="name">remark</Property>
              <Property name="property">remark</Property>
              <Property name="label">备注</Property>
              <Editor/>
            </AutoFormElement>
          </AutoForm>
          <DataGrid id="dgStockOutRecord">
            <ClientEvent name="onRefreshDom" signature="self,arg,dialogAdd">dialogAdd.hide();&#xD;
var entity = view.get(&quot;#afOutCount.entity&quot;);&#xD;
entity.set(&quot;count&quot;,null);&#xD;
</ClientEvent>
            <ClientEvent name="onCreate" signature="self,arg,dsStockOutRecord">var OperationCellRenderer = $extend(dorado.widget.grid.SubControlCellRenderer,&#xD;
{&#xD;
    createSubControl : function(arg) {&#xD;
        //返回按钮对象并为按钮对象绑定onClick事件&#xD;
        return new dorado.widget.Button({&#xD;
            onClick: function(self){&#xD;
				var entity = dsStockOutRecord.get(&quot;data:#&quot;);&#xD;
				if (entity) {					&#xD;
	                            entity.remove();&#xD;
				}		&#xD;
			}&#xD;
        });&#xD;
    },&#xD;
    refreshSubControl : function(button, arg) {&#xD;
        //设置按钮的标题&#xD;
        button.set({&#xD;
            caption : &quot;取消&quot;,&#xD;
            disabled : false,&#xD;
			width : 70,&#xD;
			style : {color:&quot;#ffffff&quot;,backgroundColor:&quot;#E03131&quot;}&#xD;
        });&#xD;
    }&#xD;
});&#xD;
self.set(&quot;#cancel.renderer&quot;, new OperationCellRenderer());</ClientEvent>
            <Property name="readOnly">true</Property>
            <Property name="height">250</Property>
            <Property name="selectionMode">none</Property>
            <Property name="dynaRowHeight">false</Property>
            <Property name="dataSet">dsStockOutRecord</Property>
            <DataColumn name="cancel">
              <Property name="property">cancel</Property>
              <Property name="align">center</Property>
              <Property name="caption">取消</Property>
              <Property name="width">70</Property>
            </DataColumn>
            <DataColumn name="matName">
              <Property name="property">matName</Property>
              <Property name="align">center</Property>
              <Property name="caption">组名</Property>
            </DataColumn>
            <DataColumn name="mat2Name">
              <Property name="property">mat2Name</Property>
              <Property name="align">center</Property>
              <Property name="caption">类别</Property>
            </DataColumn>
            <DataColumn name="mat3Name">
              <Property name="property">mat3Name</Property>
              <Property name="align">center</Property>
              <Property name="caption">品名</Property>
            </DataColumn>
            <DataColumn name="unit">
              <Property name="property">unit</Property>
              <Property name="align">center</Property>
              <Property name="caption">单位</Property>
            </DataColumn>
            <DataColumn name="count">
              <Property name="property">count</Property>
              <Property name="align">center</Property>
              <Property name="caption">数量</Property>
            </DataColumn>
            <DataColumn name="price">
              <Property name="property">price</Property>
              <Property name="align">center</Property>
              <Property name="caption">单价</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">cost</Property>
              <Property name="align">center</Property>
              <Property name="caption">成本价</Property>
              <Property name="name">cost</Property>
            </DataColumn>
            <DataColumn>
              <Property name="property">subTotal</Property>
              <Property name="align">center</Property>
              <Property name="caption">小计(元)</Property>
              <Property name="name">subTotal</Property>
              <Property name="displayFormat">#,##0.00</Property>
              <Property name="dataType">double</Property>
              <Editor/>
            </DataColumn>
          </DataGrid>
          <Button>
            <ClientEvent name="onClick" signature="self,arg,dsStockOutRecord,updateactionSave,dsStockOut,afOut">var afOutentity = view.get(&quot;#afOut.entity&quot;);&#xD;
var sectionId  = afOutentity.get(&quot;sectionId&quot;);&#xD;
&#xD;
var a=1;&#xD;
if(sectionId==0){&#xD;
	dorado.MessageBox.alert(&quot;请选择领用工段&quot;);&#xD;
	a=0;&#xD;
}&#xD;
&#xD;
if(a==1){&#xD;
	&#xD;
	var entity = dsStockOutRecord.get(&quot;data:#&quot;);&#xD;
	&#xD;
if (entity) {&#xD;
       &#xD;
   //在保存操作完成后的回调函数中将编辑弹出框隐藏&#xD;
    updateactionSave.execute(function(){})&#xD;
&#xD;
&#xD;
	&#xD;
&#xD;
}else{&#xD;
	dorado.MessageBox.alert(&quot;亲，你还没选择产品呢！&quot;);&#xD;
}&#xD;
&#xD;
}&#xD;
</ClientEvent>
            <Property name="caption">确定出库</Property>
            <Property name="icon"> url(>skin>common/icons.gif) -140px -20px</Property>
            <Property name="width">180</Property>
          </Button>
          <UpdateAction id="updateactionSave">
            <ClientEvent name="onFailure"> </ClientEvent>
            <ClientEvent name="onSuccess" signature="self,arg,dsStockOutRecord,dsStock">&#xD;
var info = self.get(&quot;returnValue&quot;);&#xD;
&#xD;
if(info.result){&#xD;
	dsStockOutRecord.clear();&#xD;
	dsStock.flush();&#xD;
    dorado.MessageBox.alert(info.message);&#xD;
}else{&#xD;
	dorado.MessageBox.alert(info.message, {&#xD;
    icon: &quot;WARNING&quot;&#xD;
    });&#xD;
}&#xD;
</ClientEvent>
            <Property name="dataResolver">matStockOutService#saveStockOutRecord</Property>
            <Property name="executingMessage">正在保存。。。</Property>
            <Property name="hotkey">ctrl+s</Property>
            <UpdateItem>
              <Property name="dataSet">dsStockOutRecord</Property>
            </UpdateItem>
            <UpdateItem>
              <Property name="dataSet">dsStockOut</Property>
            </UpdateItem>
          </UpdateAction>
        </Container>
      </SideControl>
    </SplitPanel>
  </View>
</ViewConfig>
