<?xml version="1.0" encoding="UTF-8"?>
<ViewConfig>
  <Arguments/>
  <Context/>
  <Model>
    <DataType name="dtXlyProduct" parent="dtVProduct"/>
    <DataType name="dtXlyPdtType" parent="dtPdtType"/>
    <DataType name="dtXlyPdtBra" parent="dtPdtBra"/>
    <DataType name="dtXlyPdtGd" parent="dtPdtGd"/>
    <DataType name="dtXlyPdtSpec" parent="dtPdtSpec"/>
    <DataType name="dtXlyProductSave" parent="dtProduct">
      <PropertyDef name="TYPE_BRAND"/>
      <PropertyDef name="GRADES_NAME"/>
      <PropertyDef name="SPEC_NAME"/>
    </DataType>
    <DataType name="dtXlyPdtTypBra" parent="dtPdtTypBra">
      <PropertyDef name="TYPE_BRAND">
        <Property name="label">TYPE_BRAND</Property>
      </PropertyDef>
      <PropertyDef name="ID"/>
    </DataType>
  </Model>
  <View>
    <DataSet id="dsXlyProduct">
      <Property name="dataType">[dtXlyProduct]</Property>
      <Property name="readOnly">false</Property>
      <Property name="dataProvider">productService#queryForCondition</Property>
      <Property name="loadMode">lazy</Property>
    </DataSet>
    <DataSet id="dsXlyPdtType">
      <Property name="dataType">[dtXlyPdtType]</Property>
      <Property name="dataProvider">productService#getType</Property>
    </DataSet>
    <DataSet id="dsXlyPdtBra">
      <Property name="dataType">[dtXlyPdtBra]</Property>
      <Property name="dataProvider">productService#getBrand</Property>
    </DataSet>
    <DataSet id="dsXlyPdtGd">
      <Property name="dataType">[dtXlyPdtGd]</Property>
      <Property name="dataProvider">productService#getGrades</Property>
    </DataSet>
    <DataSet id="dsXlyPdtSpec">
      <Property name="dataType">[dtXlyPdtSpec]</Property>
      <Property name="dataProvider">productService#getSpec</Property>
    </DataSet>
    <DataSet id="dsXlyProductSave">
      <ClientEvent name="onReady">self.insert();</ClientEvent>
      <Property name="dataType">[dtXlyProductSave]</Property>
    </DataSet>
    <DataSet id="dsXlyPdtTypBra">
      <Property name="dataType">[dtXlyPdtTypBra]</Property>
      <Property name="dataProvider">productService#getTypeBrand</Property>
    </DataSet>
    <AutoForm id="afCondition">
      <Property name="createPrivateDataSet">true</Property>
      <Property name="cols">400,*,*</Property>
      <Property name="labelSeparator">:</Property>
      <AutoFormElement>
        <Property name="label">种类/品牌</Property>
        <Property name="name">typeBrandId</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">category</Property>
        <Property name="label">类型</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="label">编号</Property>
        <Property name="name">patternNo</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">color</Property>
        <Property name="label">色别</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">gradesId</Property>
        <Property name="label">等级id</Property>
        <Editor/>
      </AutoFormElement>
      <AutoFormElement>
        <Property name="name">specId</Property>
        <Property name="label">规格id</Property>
        <Editor/>
      </AutoFormElement>
    </AutoForm>
    <ToolBar>
      <ToolBarButton id="btnQuery">
        <ClientEvent name="onClick" signature="self,arg,afCondition,dsXlyProduct">//获取afCondition绑定的实体对象&#xD;
var entity = afCondition.get(&quot;entity&quot;);&#xD;
//将实体对象作为参数传入，并异步刷新&#xD;
dsXlyProduct.set(&quot;parameter&quot;,entity).flushAsync();</ClientEvent>
        <Property name="caption">查询</Property>
        <Property name="icon"> url(>skin>common/icons.gif) -20px -40px</Property>
      </ToolBarButton>
      <DataPilot id="pilotXlyProduct">
        <Property name="dataSet">dsXlyProduct</Property>
        <Property name="itemCodes">pages,pageSize</Property>
      </DataPilot>
      <ToolBarButton id="btnAdd">
        <ClientEvent name="onClick" signature="self,arg,dsXlyProduct,dialogEdit">dsXlyProduct.insert();&#xD;
&#xD;
dialogEdit.show();&#xD;
</ClientEvent>
        <Property name="caption">新增</Property>
        <Property name="icon">url(>skin>common/icons.gif) -120px -0px</Property>
      </ToolBarButton>
      <ToolBarButton id="btnDel">
        <ClientEvent name="onClick" signature="self,arg,updateactionSave,dsXlyProduct">var entity = dsXlyProduct.get(&quot;data:#&quot;);&#xD;
if(entity){&#xD;
    dorado.MessageBox.confirm(&quot;确认要删除记录吗？&quot;, function(){&#xD;
        entity.remove();&#xD;
        updateactionSave.execute();&#xD;
    })&#xD;
}</ClientEvent>
        <Property name="caption">删除并保存</Property>
        <Property name="icon">url(>skin>common/icons.gif) -140px -0px	</Property>
      </ToolBarButton>
    </ToolBar>
    <DataGrid id="gridXlyProduct">
      <Property name="dataSet">dsXlyProduct</Property>
      <Property name="height">350</Property>
      <Property name="readOnly">true</Property>
      <DataColumn>
        <Property name="property">TYPE_NAME</Property>
        <Property name="align">center</Property>
        <Property name="name">TYPE_NAME</Property>
        <Property name="caption">种类</Property>
      </DataColumn>
      <DataColumn>
        <Property name="property">BRAND_NAME</Property>
        <Property name="align">center</Property>
        <Property name="name">BRAND_NAME</Property>
        <Property name="caption">品牌</Property>
      </DataColumn>
      <DataColumn name="GRADES_NAME">
        <Property name="property">GRADES_NAME</Property>
        <Property name="align">center</Property>
        <Property name="caption">等级</Property>
      </DataColumn>
      <DataColumn name="SPEC_NAME">
        <Property name="property">SPEC_NAME</Property>
        <Property name="align">center</Property>
        <Property name="caption">规格</Property>
      </DataColumn>
      <DataColumn name="CATEGORT">
        <Property name="property">CATEGORT</Property>
        <Property name="align">center</Property>
        <Property name="caption">类型</Property>
      </DataColumn>
      <DataColumn name="PATTERN_NO">
        <Property name="property">PATTERN_NO</Property>
        <Property name="align">center</Property>
        <Property name="caption">编号</Property>
      </DataColumn>
      <DataColumn name="COLOR">
        <Property name="property">COLOR</Property>
        <Property name="align">center</Property>
        <Property name="caption">色别</Property>
      </DataColumn>
      <DataColumn>
        <Property name="name">QTY</Property>
        <Property name="property">QTY</Property>
        <Property name="caption">每箱数量</Property>
        <Property name="align">center</Property>
        <Editor/>
      </DataColumn>
      <DataColumn name="BENCH_MARK">
        <Property name="property">BENCH_MARK</Property>
        <Property name="align">center</Property>
        <Property name="caption">基准价位</Property>
      </DataColumn>
    </DataGrid>
    <Dialog id="dialogEdit">
      <Property name="caption">产品详情</Property>
      <Property name="width">650</Property>
      <Property name="height">400</Property>
      <Buttons>
        <Button id="dBtnSave">
          <ClientEvent name="onClick" signature="self,arg,dialogEdit,updateactionSave">&#xD;
//在保存操作完成后的回调函数中将编辑弹出框隐藏&#xD;
updateactionSave.execute(function(){&#xD;
    dialogEdit.hide();&#xD;
	&#xD;
})</ClientEvent>
          <Property name="caption">保存</Property>
          <Property name="icon">url(>skin>common/icons.gif) -140px -20px</Property>
        </Button>
        <Button id="dBtnCancel">
          <ClientEvent name="onClick" signature="self,arg,dialogEdit,dsXlyProduct">dsXlyProduct.get(&quot;data:#&quot;).cancel();&#xD;
dialogEdit.hide();</ClientEvent>
          <Property name="caption">取消</Property>
          <Property name="icon">url(>skin>common/icons.gif) -280px -220px</Property>
        </Button>
      </Buttons>
      <Children>
        <AutoForm id="afProduct">
          <Property name="cols">*,*</Property>
          <Property name="readOnly">false</Property>
          <Property name="createPrivateDataSet">false</Property>
          <Property name="dataSet">dsXlyProductSave</Property>
          <AutoFormElement>
            <Property name="name">TYPE_BRAND</Property>
            <Property name="property">TYPE_BRAND</Property>
            <Property name="trigger">dsddPdtTypBra</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">categort</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">patternNo</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">color</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">GRADES_NAME</Property>
            <Property name="trigger">dsddPdtGd</Property>
            <Editor/>
          </AutoFormElement>
          <AutoFormElement>
            <Property name="name">SPEC_NAME</Property>
            <Property name="trigger">dsddPdtSpec</Property>
            <Editor/>
          </AutoFormElement>
        </AutoForm>
      </Children>
      <Tools/>
    </Dialog>
    <TextEditor>
      <Property name="trigger">dsddPdtTyp</Property>
      <Property name="width">300</Property>
    </TextEditor>
    <DataSetDropDown id="dsddPdtTypBra">
      <Property name="dataSet">dsXlyPdtTypBra</Property>
      <Property name="displayProperty">TYPE_BRAND</Property>
      <Property name="dynaFilter">false</Property>
      <Property name="property">TYPE_BRAND</Property>
      <Property name="editable">true</Property>
      <Property name="assignmentMap">typeBrandId=ID</Property>
    </DataSetDropDown>
    <DataSetDropDown id="dsddPdtGd">
      <ClientEvent name="beforeExecute">//var gradesId = view.get(&quot;#dsXlyProduct.data:#.#GRADES_ID&quot;)&#xD;
//弹出一个对话框  &#xD;
 //  alert(&quot;gradesId=&quot;+gradesId);  &#xD;
 //   var dsXlyProductSave = view.get(&quot;#dsXlyProductSave&quot;);&#xD;
 //   dsXlyProductSave.set(&quot;parameter&quot;,{&#xD;
 //       &quot;gradesId&quot;: gradesId&#xD;
  //  });&#xD;
  //  dsXlyProductSave.flushAsync();</ClientEvent>
      <Property name="dataSet">dsXlyPdtGd</Property>
      <Property name="displayProperty">gradesName</Property>
      <Property name="property">gradesName</Property>
      <Property name="assignmentMap">gradesId</Property>
    </DataSetDropDown>
    <DataSetDropDown id="dsddPdtSpec">
      <ClientEvent name="beforeExecute">//var specId = view.get(&quot;#dsXlyProduct.data:#.#SPEC_ID&quot;)&#xD;
//    var dsXlyProductSave = view.get(&quot;#dsXlyProductSave&quot;);&#xD;
//    dsXlyProductSave.set(&quot;parameter&quot;,{&#xD;
//        &quot;specId&quot;: specId&#xD;
 //   });&#xD;
 //   dsXlyProductSave.flushAsync();</ClientEvent>
      <Property name="dataSet">dsXlyPdtSpec</Property>
      <Property name="displayProperty">specName</Property>
      <Property name="property">specName</Property>
      <Property name="assignmentMap">specId</Property>
    </DataSetDropDown>
    <UpdateAction id="updateactionSave">
      <Property name="dataResolver">productService#saveAll</Property>
      <Property name="executingMessage">正在保存。。。</Property>
      <Property name="successMessage">保存成功！</Property>
      <Property name="hotkey">ctrl+s</Property>
      <UpdateItem>
        <Property name="dataSet">dsXlyProductSave</Property>
      </UpdateItem>
    </UpdateAction>
  </View>
</ViewConfig>
